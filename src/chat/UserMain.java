package chat;

import classes.Message;
import classes.User;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import user.ReceiveProcess;

public class UserMain extends javax.swing.JFrame {
    
    private DefaultListModel model = new DefaultListModel();
    private boolean openEmojis = false;
    private User user;
    
    /**
     * Creates new form Main
     */
    public UserMain() {
        initComponents();
        this.showChatSection(false);
        this.chatList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        emojiScrollPane = new javax.swing.JScrollPane();
        emojiPanel = new javax.swing.JPanel();
        Slightly_Smiling_Face = new javax.swing.JLabel();
        Upside_Down_Face = new javax.swing.JLabel();
        Smiling_Face = new javax.swing.JLabel();
        Smiling_Emoji_with_Eyes_Opened = new javax.swing.JLabel();
        Smiling_Emoji_with_Smiling_Eyes = new javax.swing.JLabel();
        Smiling_Face_with_Tightly_Closed_Eyes = new javax.swing.JLabel();
        Smiling_with_Sweat = new javax.swing.JLabel();
        Tears_of_Joy = new javax.swing.JLabel();
        Smirk_Face = new javax.swing.JLabel();
        Unamused_Face = new javax.swing.JLabel();
        Sad_Face = new javax.swing.JLabel();
        Relieved = new javax.swing.JLabel();
        Money_Face = new javax.swing.JLabel();
        Tongue_Out = new javax.swing.JLabel();
        Tongue_Out_Emoji_with_Tightly_Closed_Eyes = new javax.swing.JLabel();
        Tongue_Out_Emoji_with_Winking = new javax.swing.JLabel();
        Hugging_Face = new javax.swing.JLabel();
        Smiling_Face_Emoji_with_Blushed_Cheeks = new javax.swing.JLabel();
        Shyly_Smiling_Face = new javax.swing.JLabel();
        Kiss_Emoji_with_Closed_Eyes = new javax.swing.JLabel();
        Kissing_Face_with_Smiling_Eyes = new javax.swing.JLabel();
        Kissing_Face = new javax.swing.JLabel();
        Nerd_with_Glasses = new javax.swing.JLabel();
        Sunglasses = new javax.swing.JLabel();
        Grinning_Emoji_with_Smiling_Eyes = new javax.swing.JLabel();
        Grinmacing_Face = new javax.swing.JLabel();
        Hungry_Face = new javax.swing.JLabel();
        Wink = new javax.swing.JLabel();
        Emoji_Face_without_Mouth = new javax.swing.JLabel();
        Hushed_Face = new javax.swing.JLabel();
        Frowning_Face_with_Open_Mouth = new javax.swing.JLabel();
        Surprised_Face = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        messageTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        ipLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        ipAddressTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        chatScrollPane = new javax.swing.JScrollPane();
        chatList = new javax.swing.JList<>();
        selectEmojiLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        emojiScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        emojiScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        emojiPanel.setBackground(new java.awt.Color(255, 255, 255));

        Slightly_Smiling_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Slightly_Smiling_Face.png"))); // NOI18N
        Slightly_Smiling_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Slightly_Smiling_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Slightly_Smiling_FaceMouseClicked(evt);
            }
        });

        Upside_Down_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Upside_Down_Face.png"))); // NOI18N
        Upside_Down_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Upside_Down_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Upside_Down_FaceMouseClicked(evt);
            }
        });

        Smiling_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Smiling_Face.png"))); // NOI18N
        Smiling_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Smiling_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Smiling_FaceMouseClicked(evt);
            }
        });

        Smiling_Emoji_with_Eyes_Opened.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Smiling_Emoji_with_Eyes_Opened.png"))); // NOI18N
        Smiling_Emoji_with_Eyes_Opened.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Smiling_Emoji_with_Eyes_Opened.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Smiling_Emoji_with_Eyes_OpenedMouseClicked(evt);
            }
        });

        Smiling_Emoji_with_Smiling_Eyes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Smiling_Emoji_with_Smiling_Eyes.png"))); // NOI18N
        Smiling_Emoji_with_Smiling_Eyes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Smiling_Emoji_with_Smiling_Eyes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Smiling_Emoji_with_Smiling_EyesMouseClicked(evt);
            }
        });

        Smiling_Face_with_Tightly_Closed_Eyes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Smiling_Face_with_Tightly_Closed_Eyes.png"))); // NOI18N
        Smiling_Face_with_Tightly_Closed_Eyes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Smiling_Face_with_Tightly_Closed_Eyes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Smiling_Face_with_Tightly_Closed_EyesMouseClicked(evt);
            }
        });

        Smiling_with_Sweat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Smiling_with_Sweat.png"))); // NOI18N
        Smiling_with_Sweat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Smiling_with_Sweat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Smiling_with_SweatMouseClicked(evt);
            }
        });

        Tears_of_Joy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tears_of_Joy.png"))); // NOI18N
        Tears_of_Joy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Tears_of_Joy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tears_of_JoyMouseClicked(evt);
            }
        });

        Smirk_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Smirk_Face.png"))); // NOI18N
        Smirk_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Smirk_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Smirk_FaceMouseClicked(evt);
            }
        });

        Unamused_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Unamused_Face.png"))); // NOI18N
        Unamused_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Unamused_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Unamused_FaceMouseClicked(evt);
            }
        });

        Sad_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sad_Face.png"))); // NOI18N
        Sad_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Sad_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Sad_FaceMouseClicked(evt);
            }
        });

        Relieved.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Relieved.png"))); // NOI18N
        Relieved.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Relieved.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RelievedMouseClicked(evt);
            }
        });

        Money_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Money_Face.png"))); // NOI18N
        Money_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Money_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Money_FaceMouseClicked(evt);
            }
        });

        Tongue_Out.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tongue_Out.png"))); // NOI18N
        Tongue_Out.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Tongue_Out.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tongue_OutMouseClicked(evt);
            }
        });

        Tongue_Out_Emoji_with_Tightly_Closed_Eyes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tongue_Out_Emoji_with_Tightly_Closed_Eyes.png"))); // NOI18N
        Tongue_Out_Emoji_with_Tightly_Closed_Eyes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Tongue_Out_Emoji_with_Tightly_Closed_Eyes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tongue_Out_Emoji_with_Tightly_Closed_EyesMouseClicked(evt);
            }
        });

        Tongue_Out_Emoji_with_Winking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tongue_Out_Emoji_with_Winking.png"))); // NOI18N
        Tongue_Out_Emoji_with_Winking.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Tongue_Out_Emoji_with_Winking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tongue_Out_Emoji_with_WinkingMouseClicked(evt);
            }
        });

        Hugging_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Hugging_Face.png"))); // NOI18N
        Hugging_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Hugging_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Hugging_FaceMouseClicked(evt);
            }
        });

        Smiling_Face_Emoji_with_Blushed_Cheeks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Smiling_Face_Emoji_with_Blushed_Cheeks.png"))); // NOI18N
        Smiling_Face_Emoji_with_Blushed_Cheeks.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Smiling_Face_Emoji_with_Blushed_Cheeks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Smiling_Face_Emoji_with_Blushed_CheeksMouseClicked(evt);
            }
        });

        Shyly_Smiling_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Shyly_Smiling_Face.png"))); // NOI18N
        Shyly_Smiling_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Shyly_Smiling_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Shyly_Smiling_FaceMouseClicked(evt);
            }
        });

        Kiss_Emoji_with_Closed_Eyes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Kiss_Emoji_with_Closed_Eyes.png"))); // NOI18N
        Kiss_Emoji_with_Closed_Eyes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Kiss_Emoji_with_Closed_Eyes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Kiss_Emoji_with_Closed_EyesMouseClicked(evt);
            }
        });

        Kissing_Face_with_Smiling_Eyes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Kissing_Face_with_Smiling_Eyes.png"))); // NOI18N
        Kissing_Face_with_Smiling_Eyes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Kissing_Face_with_Smiling_Eyes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Kissing_Face_with_Smiling_EyesMouseClicked(evt);
            }
        });

        Kissing_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Kissing_Face.png"))); // NOI18N
        Kissing_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Kissing_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Kissing_FaceMouseClicked(evt);
            }
        });

        Nerd_with_Glasses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Nerd_with_Glasses.png"))); // NOI18N
        Nerd_with_Glasses.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Nerd_with_Glasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Nerd_with_GlassesMouseClicked(evt);
            }
        });

        Sunglasses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sunglasses.png"))); // NOI18N
        Sunglasses.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Sunglasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SunglassesMouseClicked(evt);
            }
        });

        Grinning_Emoji_with_Smiling_Eyes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Grinning_Emoji_with_Smiling_Eyes.png"))); // NOI18N
        Grinning_Emoji_with_Smiling_Eyes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Grinning_Emoji_with_Smiling_Eyes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grinning_Emoji_with_Smiling_EyesMouseClicked(evt);
            }
        });

        Grinmacing_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Grinmacing_Face.png"))); // NOI18N
        Grinmacing_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Grinmacing_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grinmacing_FaceMouseClicked(evt);
            }
        });

        Hungry_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Hungry_Face.png"))); // NOI18N
        Hungry_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Hungry_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Hungry_FaceMouseClicked(evt);
            }
        });

        Wink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Wink.png"))); // NOI18N
        Wink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Wink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WinkMouseClicked(evt);
            }
        });

        Emoji_Face_without_Mouth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Emoji_Face_without_Mouth.png"))); // NOI18N
        Emoji_Face_without_Mouth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Emoji_Face_without_Mouth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Emoji_Face_without_MouthMouseClicked(evt);
            }
        });

        Hushed_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Hushed_Face.png"))); // NOI18N
        Hushed_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Hushed_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Hushed_FaceMouseClicked(evt);
            }
        });

        Frowning_Face_with_Open_Mouth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Frowning_Face_with_Open_Mouth.png"))); // NOI18N
        Frowning_Face_with_Open_Mouth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Frowning_Face_with_Open_Mouth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Frowning_Face_with_Open_MouthMouseClicked(evt);
            }
        });

        Surprised_Face.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Surprised_Face.png"))); // NOI18N
        Surprised_Face.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Surprised_Face.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Surprised_FaceMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout emojiPanelLayout = new javax.swing.GroupLayout(emojiPanel);
        emojiPanel.setLayout(emojiPanelLayout);
        emojiPanelLayout.setHorizontalGroup(
            emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emojiPanelLayout.createSequentialGroup()
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(emojiPanelLayout.createSequentialGroup()
                        .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Slightly_Smiling_Face)
                            .addComponent(Smiling_Emoji_with_Smiling_Eyes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(emojiPanelLayout.createSequentialGroup()
                                .addComponent(Upside_Down_Face)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Smiling_Face)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Smiling_Emoji_with_Eyes_Opened))
                            .addGroup(emojiPanelLayout.createSequentialGroup()
                                .addComponent(Smiling_Face_with_Tightly_Closed_Eyes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Smiling_with_Sweat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tears_of_Joy))))
                    .addGroup(emojiPanelLayout.createSequentialGroup()
                        .addComponent(Smirk_Face)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Unamused_Face)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Sad_Face)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Relieved))
                    .addGroup(emojiPanelLayout.createSequentialGroup()
                        .addComponent(Money_Face)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tongue_Out)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tongue_Out_Emoji_with_Tightly_Closed_Eyes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tongue_Out_Emoji_with_Winking))
                    .addGroup(emojiPanelLayout.createSequentialGroup()
                        .addComponent(Hugging_Face)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Smiling_Face_Emoji_with_Blushed_Cheeks)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Shyly_Smiling_Face)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Kiss_Emoji_with_Closed_Eyes))
                    .addGroup(emojiPanelLayout.createSequentialGroup()
                        .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Emoji_Face_without_Mouth)
                            .addComponent(Grinning_Emoji_with_Smiling_Eyes)
                            .addComponent(Kissing_Face_with_Smiling_Eyes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(emojiPanelLayout.createSequentialGroup()
                                .addComponent(Kissing_Face)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Nerd_with_Glasses)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Sunglasses))
                            .addGroup(emojiPanelLayout.createSequentialGroup()
                                .addComponent(Grinmacing_Face)
                                .addGap(7, 7, 7)
                                .addComponent(Hungry_Face)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Wink))
                            .addGroup(emojiPanelLayout.createSequentialGroup()
                                .addComponent(Hushed_Face)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Frowning_Face_with_Open_Mouth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Surprised_Face)))))
                .addGap(0, 0, 0))
        );
        emojiPanelLayout.setVerticalGroup(
            emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emojiPanelLayout.createSequentialGroup()
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Slightly_Smiling_Face)
                    .addComponent(Upside_Down_Face)
                    .addComponent(Smiling_Face)
                    .addComponent(Smiling_Emoji_with_Eyes_Opened))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Smiling_Face_with_Tightly_Closed_Eyes)
                    .addComponent(Smiling_Emoji_with_Smiling_Eyes)
                    .addComponent(Smiling_with_Sweat)
                    .addComponent(Tears_of_Joy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Smirk_Face)
                    .addComponent(Unamused_Face)
                    .addComponent(Sad_Face)
                    .addComponent(Relieved))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Money_Face)
                    .addComponent(Tongue_Out_Emoji_with_Tightly_Closed_Eyes)
                    .addComponent(Tongue_Out_Emoji_with_Winking)
                    .addComponent(Tongue_Out))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Hugging_Face)
                    .addComponent(Smiling_Face_Emoji_with_Blushed_Cheeks)
                    .addComponent(Shyly_Smiling_Face)
                    .addComponent(Kiss_Emoji_with_Closed_Eyes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Kissing_Face_with_Smiling_Eyes)
                    .addComponent(Kissing_Face)
                    .addComponent(Nerd_with_Glasses)
                    .addComponent(Sunglasses))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Grinning_Emoji_with_Smiling_Eyes)
                    .addComponent(Grinmacing_Face)
                    .addComponent(Hungry_Face)
                    .addComponent(Wink))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Emoji_Face_without_Mouth)
                    .addComponent(Hushed_Face)
                    .addComponent(Frowning_Face_with_Open_Mouth)
                    .addComponent(Surprised_Face)))
        );

        emojiScrollPane.setViewportView(emojiPanel);

        jPanel1.add(emojiScrollPane);
        emojiScrollPane.setBounds(10, 126, 180, 170);

        titleLabel.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        titleLabel.setText("Chat");
        jPanel1.add(titleLabel);
        titleLabel.setBounds(10, 17, 35, 24);

        messageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                messageTextFieldKeyPressed(evt);
            }
        });
        jPanel1.add(messageTextField);
        messageTextField.setBounds(39, 298, 242, 31);

        sendButton.setBackground(new java.awt.Color(0, 148, 255));
        sendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Send.png"))); // NOI18N
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        jPanel1.add(sendButton);
        sendButton.setBounds(281, 298, 57, 31);

        ipLabel.setFont(new java.awt.Font("SimSun-ExtB", 0, 14)); // NOI18N
        ipLabel.setText("Ingrese la direccion IP y puerto:");
        jPanel1.add(ipLabel);
        ipLabel.setBounds(10, 155, 328, 25);

        usernameLabel.setFont(new java.awt.Font("SimSun-ExtB", 0, 14)); // NOI18N
        usernameLabel.setText("Ingrese su nombre:");
        jPanel1.add(usernameLabel);
        usernameLabel.setBounds(10, 93, 328, 25);

        usernameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameTextFieldKeyPressed(evt);
            }
        });
        jPanel1.add(usernameTextField);
        usernameTextField.setBounds(10, 124, 328, 30);

        ipAddressTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ipAddressTextFieldKeyPressed(evt);
            }
        });
        jPanel1.add(ipAddressTextField);
        ipAddressTextField.setBounds(10, 186, 328, 30);

        loginButton.setBackground(new java.awt.Color(0, 148, 255));
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("Ingresar");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        jPanel1.add(loginButton);
        loginButton.setBounds(10, 230, 328, 30);

        chatScrollPane.setViewportView(chatList);

        jPanel1.add(chatScrollPane);
        chatScrollPane.setBounds(10, 47, 328, 245);

        selectEmojiLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectEmojiLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/SelectEmoji.png"))); // NOI18N
        selectEmojiLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        selectEmojiLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectEmojiLabelMouseClicked(evt);
            }
        });
        jPanel1.add(selectEmojiLabel);
        selectEmojiLabel.setBounds(10, 298, 29, 31);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        send(this.messageTextField.getText());
    }//GEN-LAST:event_sendButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        logIn();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void selectEmojiLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectEmojiLabelMouseClicked
        openEmojis = !openEmojis;
        this.emojiScrollPane.setVisible(this.openEmojis);
    }//GEN-LAST:event_selectEmojiLabelMouseClicked

    private void Slightly_Smiling_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slightly_Smiling_FaceMouseClicked
        send("{Slightly_Smiling_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Slightly_Smiling_FaceMouseClicked

    private void Upside_Down_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Upside_Down_FaceMouseClicked
        send("{Upside_Down_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Upside_Down_FaceMouseClicked

    private void Smiling_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Smiling_FaceMouseClicked
        send("{Smiling_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Smiling_FaceMouseClicked

    private void Smiling_Emoji_with_Eyes_OpenedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Smiling_Emoji_with_Eyes_OpenedMouseClicked
        send("{Smiling_Emoji_with_Eyes_Opened}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Smiling_Emoji_with_Eyes_OpenedMouseClicked

    private void Smiling_Emoji_with_Smiling_EyesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Smiling_Emoji_with_Smiling_EyesMouseClicked
        send("{Smiling_Emoji_with_Smiling_Eyes}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Smiling_Emoji_with_Smiling_EyesMouseClicked

    private void Smiling_Face_with_Tightly_Closed_EyesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Smiling_Face_with_Tightly_Closed_EyesMouseClicked
        send("{Smiling_Face_with_Tightly_Closed_Eyes}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Smiling_Face_with_Tightly_Closed_EyesMouseClicked

    private void Smiling_with_SweatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Smiling_with_SweatMouseClicked
        send("{Smiling_with_Sweat}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Smiling_with_SweatMouseClicked

    private void Tears_of_JoyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tears_of_JoyMouseClicked
        send("{Tears_of_Joy}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Tears_of_JoyMouseClicked

    private void Smirk_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Smirk_FaceMouseClicked
        send("{Smirk_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Smirk_FaceMouseClicked

    private void Unamused_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Unamused_FaceMouseClicked
        send("{Unamused_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Unamused_FaceMouseClicked

    private void Sad_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Sad_FaceMouseClicked
        send("{Sad_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Sad_FaceMouseClicked

    private void RelievedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RelievedMouseClicked
        send("{Relieved}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_RelievedMouseClicked

    private void Money_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Money_FaceMouseClicked
        send("{Money_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Money_FaceMouseClicked

    private void Tongue_OutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tongue_OutMouseClicked
        send("{Tongue_Out}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Tongue_OutMouseClicked

    private void Tongue_Out_Emoji_with_Tightly_Closed_EyesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tongue_Out_Emoji_with_Tightly_Closed_EyesMouseClicked
        send("{Tongue_Out_Emoji_with_Tightly_Closed_Eyes}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Tongue_Out_Emoji_with_Tightly_Closed_EyesMouseClicked

    private void Tongue_Out_Emoji_with_WinkingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tongue_Out_Emoji_with_WinkingMouseClicked
        send("{Tongue_Out_Emoji_with_Winking}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Tongue_Out_Emoji_with_WinkingMouseClicked

    private void Hugging_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Hugging_FaceMouseClicked
        send("{Hugging_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Hugging_FaceMouseClicked

    private void Smiling_Face_Emoji_with_Blushed_CheeksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Smiling_Face_Emoji_with_Blushed_CheeksMouseClicked
        send("{Smiling_Face_Emoji_with_Blushed_Cheeks}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Smiling_Face_Emoji_with_Blushed_CheeksMouseClicked

    private void Shyly_Smiling_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Shyly_Smiling_FaceMouseClicked
        send("{Shyly_Smiling_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Shyly_Smiling_FaceMouseClicked

    private void Kiss_Emoji_with_Closed_EyesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Kiss_Emoji_with_Closed_EyesMouseClicked
        send("{Kiss_Emoji_with_Closed_Eyes}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Kiss_Emoji_with_Closed_EyesMouseClicked

    private void Kissing_Face_with_Smiling_EyesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Kissing_Face_with_Smiling_EyesMouseClicked
        send("{Kissing_Face_with_Smiling_Eyes}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Kissing_Face_with_Smiling_EyesMouseClicked

    private void Kissing_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Kissing_FaceMouseClicked
        send("{Kissing_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Kissing_FaceMouseClicked

    private void Nerd_with_GlassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Nerd_with_GlassesMouseClicked
        send("{Nerd_with_Glasses}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Nerd_with_GlassesMouseClicked

    private void SunglassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SunglassesMouseClicked
        send("{Sunglasses}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_SunglassesMouseClicked

    private void messageTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            send(this.messageTextField.getText());
        }
    }//GEN-LAST:event_messageTextFieldKeyPressed

    private void usernameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            logIn();
        }
    }//GEN-LAST:event_usernameTextFieldKeyPressed

    private void ipAddressTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipAddressTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            logIn();
        }
    }//GEN-LAST:event_ipAddressTextFieldKeyPressed

    private void Grinning_Emoji_with_Smiling_EyesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grinning_Emoji_with_Smiling_EyesMouseClicked
        send("{Grinning_Emoji_with_Smiling_Eyes}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Grinning_Emoji_with_Smiling_EyesMouseClicked

    private void Grinmacing_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grinmacing_FaceMouseClicked
        send("{Grinmacing_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Grinmacing_FaceMouseClicked

    private void Hungry_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Hungry_FaceMouseClicked
        send("{Hungry_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Hungry_FaceMouseClicked

    private void WinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WinkMouseClicked
        send("{Wink}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_WinkMouseClicked

    private void Emoji_Face_without_MouthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Emoji_Face_without_MouthMouseClicked
        send("{Emoji_Face_without_Mouth}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Emoji_Face_without_MouthMouseClicked

    private void Hushed_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Hushed_FaceMouseClicked
        send("{Hushed_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Hushed_FaceMouseClicked

    private void Frowning_Face_with_Open_MouthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Frowning_Face_with_Open_MouthMouseClicked
        send("{Frowning_Face_with_Open_Mouth}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Frowning_Face_with_Open_MouthMouseClicked

    private void Surprised_FaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Surprised_FaceMouseClicked
        send("{Surprised_Face}");
        this.emojiScrollPane.setVisible(false);
    }//GEN-LAST:event_Surprised_FaceMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        exitChat();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UserMain().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Emoji_Face_without_Mouth;
    private javax.swing.JLabel Frowning_Face_with_Open_Mouth;
    private javax.swing.JLabel Grinmacing_Face;
    private javax.swing.JLabel Grinning_Emoji_with_Smiling_Eyes;
    private javax.swing.JLabel Hugging_Face;
    private javax.swing.JLabel Hungry_Face;
    private javax.swing.JLabel Hushed_Face;
    private javax.swing.JLabel Kiss_Emoji_with_Closed_Eyes;
    private javax.swing.JLabel Kissing_Face;
    private javax.swing.JLabel Kissing_Face_with_Smiling_Eyes;
    private javax.swing.JLabel Money_Face;
    private javax.swing.JLabel Nerd_with_Glasses;
    private javax.swing.JLabel Relieved;
    private javax.swing.JLabel Sad_Face;
    private javax.swing.JLabel Shyly_Smiling_Face;
    private javax.swing.JLabel Slightly_Smiling_Face;
    private javax.swing.JLabel Smiling_Emoji_with_Eyes_Opened;
    private javax.swing.JLabel Smiling_Emoji_with_Smiling_Eyes;
    private javax.swing.JLabel Smiling_Face;
    private javax.swing.JLabel Smiling_Face_Emoji_with_Blushed_Cheeks;
    private javax.swing.JLabel Smiling_Face_with_Tightly_Closed_Eyes;
    private javax.swing.JLabel Smiling_with_Sweat;
    private javax.swing.JLabel Smirk_Face;
    private javax.swing.JLabel Sunglasses;
    private javax.swing.JLabel Surprised_Face;
    private javax.swing.JLabel Tears_of_Joy;
    private javax.swing.JLabel Tongue_Out;
    private javax.swing.JLabel Tongue_Out_Emoji_with_Tightly_Closed_Eyes;
    private javax.swing.JLabel Tongue_Out_Emoji_with_Winking;
    private javax.swing.JLabel Unamused_Face;
    private javax.swing.JLabel Upside_Down_Face;
    private javax.swing.JLabel Wink;
    private javax.swing.JList<String> chatList;
    private javax.swing.JScrollPane chatScrollPane;
    private javax.swing.JPanel emojiPanel;
    private javax.swing.JScrollPane emojiScrollPane;
    private javax.swing.JTextField ipAddressTextField;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JLabel selectEmojiLabel;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

    private void showChatSection(boolean bool) {
        this.titleLabel.setVisible(bool);
        this.chatScrollPane.setVisible(bool);
        this.chatList.setVisible(bool);
        this.messageTextField.setVisible(bool);
        this.sendButton.setVisible(bool);
        this.selectEmojiLabel.setVisible(bool);
        this.emojiScrollPane.setVisible(false);
    }

    private void showUserSection(boolean  bool) {
        this.usernameTextField.setVisible(bool);
        this.ipAddressTextField.setVisible(bool);
        this.usernameLabel.setVisible(bool);
        this.ipLabel.setVisible(bool);
        this.loginButton.setVisible(bool);
    }
    
    private void enableLogin (boolean bool) {
        this.usernameTextField.setEnabled(bool);
        this.ipAddressTextField.setEnabled(bool);
        this.loginButton.setEnabled(bool);
    }
    
    private Message formatMessage(String message) {
        String dest = null;
        
        Pattern pattern = Pattern.compile("^@(.+?) (.+?)$");
        Matcher matcher = pattern.matcher(message);
        if (matcher.find()) {
            dest = matcher.group(1);
            message = matcher.group(2);
        }
        
        Message msg = new Message();
        msg.setMessage(message);
        msg.setFrom(user.getUsername());
        msg.setDest(dest);
        
        return msg;
    }
    
    private void sendMessage(Message msg, Socket socket) throws IOException {
        ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
        oos.writeObject(msg);
    }

    private void send(String message) {
        if (!message.trim().isEmpty()) {
            try {
                Message msg = formatMessage(message);
                sendMessage(msg, user.getSocket());
                this.messageTextField.setText("");
            } catch (IOException ex) {
                System.out.println("[-] Error while sending message");
            }
        }
    }
    
    private void waitFor(long seconds) {
        try {
            TimeUnit.SECONDS.sleep(seconds);
        } catch (InterruptedException ex) {
            System.out.println("[-] Error while waiting, exiting program...");
            System.exit(1);
        }
    }

    @SuppressWarnings("InfiniteRecursion")
    private void connect(String username, String ip, int port) {
        try {
            // Connect to server
            Socket socket = new Socket(ip, port);
            
            // Create user
            user = new User(socket, username);
            
            // Send username
            Message msg = new Message();
            msg.setMessage(username);
            sendMessage(msg, user.getSocket());
            
            // Create user process
            ReceiveProcess receiveProcess = new ReceiveProcess(user.getSocket(), model);
            receiveProcess.start();
        } catch (IOException ex) {
            System.out.println("[-] Can't connect to " + ip + ":" + port);
            System.out.println("[*] Waiting 10 seconds to reconnect...");
            waitFor(10);
            connect(username, ip, port);
        }
    }
    
    private String validateLogInData(String username, String ip) {
        Pattern pattern;
        Matcher matcher;
        
        // Validate username
        pattern = Pattern.compile("^(?=.{1,20}$)(?![_])(?!.*[_]{2})[a-z0-9_]+(?<![_.])$", Pattern.CASE_INSENSITIVE);
        matcher = pattern.matcher(username);
        if (!matcher.matches()) return "Only alphanumeric and underscore are accepted for username";
        
        // Validate ip address
        pattern = Pattern.compile("^(((0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)\\.){3}"
                + "(0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)|localhost)"
                + ":([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$");
        matcher = pattern.matcher(ip);
        if (!matcher.matches()) return "Invalid ip address/port";
        
        return null;
    }

    private void logIn() {
        // Disable login components
        enableLogin(false);
        
        // Get data
        String username = this.usernameTextField.getText();
        String ip = this.ipAddressTextField.getText();
        
        // Validate data
        String err = validateLogInData(username, ip);
        
        // Connect to server
        if (err == null) {
            String[] address = ip.split(":");
            showUserSection(false);
            connect(username, address[0], Integer.parseInt(address[1]));
            showChatSection(true);
        } else {
            JOptionPane.showMessageDialog(null, err, "Error", JOptionPane.ERROR_MESSAGE);
            enableLogin(true);
        }
    }
    
    private void exitChat() {
        try {
            this.user.getSocket().close();
        } catch (IOException ex) {
            Logger.getLogger(UserMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
